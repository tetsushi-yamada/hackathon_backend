users:
    post:
      summary: Create a new user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_name
                - email
              properties:
                user_name:
                  type: string
                email:
                  type: string
      responses:
        user_id:
          type: string
        '201':
          description: Created
user:
    get:
      summary: Get a user by ID
      operationId: getUser
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Users'
    delete:
      summary: Delete a user by ID
      operationId: deleteUser
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: User not found

user_search:
    get:
      summary: Search users by name
      operationId: searchUsers
      parameters:
        - name: query
          in: path
          description: Query string for performing search
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of users that match the query
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '../openapi.yaml#/components/schemas/User'
        '400':
          description: Invalid request parameters
        '500':
          description: Internal server error