follows_user:
    get:
      summary: Get all followers for a specific user
      operationId: getFollowsForUser
      parameters:
        - name: user_id
          in: query
          required: true
          description: The ID of the user to retrieve followers for
          schema:
            type: string
      responses:
        '200':
          description: A list of followers
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/Follows'
      tags:
        - Follows

follows:
    post:
      summary: Create a follow relationship
      operationId: createFollow
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - follow_id
              properties:
                user_id:
                  type: string
                follow_id:
                  type: string
      responses:
        '201':
          description: Created

follows_user_follow_id:
    delete:
        summary: Delete a follow relationship
        operationId: deleteFollow
        parameters:
            - name: user_id
              in: path
              required: true
              schema:
                type: string
            - name: follow_id
              in: path
              required: true
              schema:
                type: string
        responses:
            '204':
              description: No Content
            '404':
              description: Follow not found

follow_check:
  get:
    summary: Check if a user is following another user
    operationId: checkFollow
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
        description: The user ID of the person checking the follow status
      - name: follow_id
        in: path
        required: true
        schema:
          type: string
        description: The user ID of the person to check if they are being followed
    responses:
      '200':
        description: Follow status returned successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                isFollowing:
                  type: boolean
                  description: Whether the user is following the other user
      '400':
        description: Invalid request parameters
      '404':
        description: User not found
      '500':
        description: Internal server error